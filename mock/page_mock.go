// Code generated by MockGen. DO NOT EDIT.
// Source: service/page.go

// Package mock is a generated GoMock package.
package mock

import (
	dtos "linked-page/dtos"
	model "linked-page/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPageServiceInterface is a mock of PageServiceInterface interface.
type MockPageServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPageServiceInterfaceMockRecorder
}

// MockPageServiceInterfaceMockRecorder is the mock recorder for MockPageServiceInterface.
type MockPageServiceInterfaceMockRecorder struct {
	mock *MockPageServiceInterface
}

// NewMockPageServiceInterface creates a new mock instance.
func NewMockPageServiceInterface(ctrl *gomock.Controller) *MockPageServiceInterface {
	mock := &MockPageServiceInterface{ctrl: ctrl}
	mock.recorder = &MockPageServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPageServiceInterface) EXPECT() *MockPageServiceInterfaceMockRecorder {
	return m.recorder
}

// GetPage mocks base method.
func (m *MockPageServiceInterface) GetPage(pageId uint) (*model.Page, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPage", pageId)
	ret0, _ := ret[0].(*model.Page)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPage indicates an expected call of GetPage.
func (mr *MockPageServiceInterfaceMockRecorder) GetPage(pageId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPage", reflect.TypeOf((*MockPageServiceInterface)(nil).GetPage), pageId)
}

// InsertPage mocks base method.
func (m *MockPageServiceInterface) InsertPage(newPage *dtos.InsertPageRequest) (uint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertPage", newPage)
	ret0, _ := ret[0].(uint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertPage indicates an expected call of InsertPage.
func (mr *MockPageServiceInterfaceMockRecorder) InsertPage(newPage interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertPage", reflect.TypeOf((*MockPageServiceInterface)(nil).InsertPage), newPage)
}

// SetPage mocks base method.
func (m *MockPageServiceInterface) SetPage(patchPage *dtos.PatchPageRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetPage", patchPage)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetPage indicates an expected call of SetPage.
func (mr *MockPageServiceInterfaceMockRecorder) SetPage(patchPage interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPage", reflect.TypeOf((*MockPageServiceInterface)(nil).SetPage), patchPage)
}
